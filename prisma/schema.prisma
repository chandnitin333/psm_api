
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    Int    @id @default(autoincrement())
  name  String
  email String @unique
  posts Post[] // Add this line to establish the opposite relation
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
}
model admin_user {
  id    Int    @id @default(autoincrement())
  password  String
  username String @unique
}

model District {
  id    Int    @id @default(autoincrement())
  name  String @unique
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  talukas Taluka[]
  grampanchayat Grampanchayat[]
}

model Taluka {
  id    Int    @id @default(autoincrement())
  name  String
  district_id Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  district    District     @relation(fields: [district_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  grampanchayat Grampanchayat[]
}

model Grampanchayat {
  id    Int    @id @default(autoincrement())
  name  String
  district_id Int
  taluka_id Int
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  district  District    @relation(fields: [district_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
  taluka    Taluka      @relation(fields:[taluka_id], references:[id], onDelete: Cascade, onUpdate: Cascade)
}
